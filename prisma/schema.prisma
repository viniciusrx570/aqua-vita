// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criar tabela:
//clientes
model Clientes {
  id              Int      @id @default(autoincrement())
  nome            String
  cpf             String?
  data_nascimento String?
  sexo            String?
  venda           Vendas[]
}

//produtos
model Produtos {
  id                 Int               @id @unique @default(autoincrement())
  nome               String
  descricao          String
  valor              Float             @default(0.0)
  tipo               String
  quantidade         Float             @default(0.0)
  embalagem          String
  lote               lotes             @relation(fields: [loteId], references: [id])
  loteId             Int               @unique
  MovimentoEstoque   MovimentoEstoque? @relation(fields: [movimentoEstoqueId], references: [id])
  movimentoEstoqueId Int?              @unique
}

//lotes

model lotes {
  id               Int                @id @unique @default(autoincrement())
  codigo           String
  produtos         Produtos[]
  produtoId        Int                @unique
  dataProducao     DateTime
  dataValidade     DateTime
  movimentoEstoque MovimentoEstoque[]
  item             ItensVenda[]
}

//movimentos de estoque 
model MovimentoEstoque {
  id         Int        @id @default(autoincrement())
  loteId     Int        @unique
  lote       lotes      @relation(fields: [loteId], references: [id])
  tipo       String?
  quantidade Int
  data       DateTime   @default(now())
  motivo     Motivo[]
  motivoId   Int        @unique
  Produtos   Produtos[]
}

model Motivo {
  id               Int                @id @default(autoincrement())
  MovimentoEstoque MovimentoEstoque[]
}

//vendas 
model Vendas {
  id         Int          @id() @default(autoincrement())
  clienteId  Int          @unique
  cliente    Clientes     @relation(fields: [clienteId], references: [id])
  data       DateTime     @default(now())
  status     String
  itemId     Int          @unique
  item       ItensVenda[]
  valorTotal Float
}

//item vendas
model ItensVenda {
  id         Int    @id @default(autoincrement())
  vendasId   Int
  vendas     Vendas @relation(fields: [vendasId], references: [id])
  lote       lotes  @relation(fields: [loteId], references: [id])
  loteId     Int    @unique
  quantidade Int    @default(0)
  valor      Float  @default(0.0)
  ValorTotal Float  @default(0.0)
}
